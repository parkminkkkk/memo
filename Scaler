1. Standard Scaler
-기존 변수의 범위를 정규 분포로 변환하는 것
-데이터의 최소, 최대를 모를때 사용
-모든 피처의 평균을 0, 분산을 1로 만듦
-이상치가 있다면 평균과 표준편차에 영향을 미치기 때문에 데이터의 확산이 달라지게 됨
-그러나, 이상치가 많다면 사용하지 않는 것이 좋음

-기본스케일, 평균과 표준편차 사용
-평균을 제거하고 데이터를 단위분산으로 조정
-그러나, 이상치가 있다면 평균과 표준편차에 영향을 미쳐 변환된 데이터의 확산은 매우 달라지게 됨
-따럿, 이상치가 있는 경우 잡힌 척도를 보장할 수 없다

2. MaxAbsScaler()
-MinMaxscaler와 비슷
-모든 피처들의 절댓값이 0~1사이에 놓이도록 만들어준다
-즉, 0을 기준으로 절댓값이 가장 큰 수가 1또는 -1의 값을 가지게 된다
-그러나, 이상치(아웃라이어) 존재에 민감

3. MinMaxScaler
-데이터의 값들을 0~1사이의 값으로 변환시키는 것
-각 변수가 정규분포(bell-shape)가 아니거나 표준편차가 작을때 효과적
-그러나, 이상치(아웃라이어) 존재에 민감
-이상치가 있는 경우 변환된 값이 매우 좁은 범위로 압축 될 수 있다.

4. Robust Scaler
-모든 피처가 같은 크기를 갖는다는 점이 standard와 유사
-그러나, 평균과 분산이 아닌 중위수(median)과 IQR(사분위수)를 사용함
-standard scaler에 비해 이상치의 영향이 적어짐

-아웃라이어의 영향을 최소화한 기법
-중앙값과 사분위수(interquartile range)를 사용하기 때문에 standardscaler와 비교했을때
표준화 후 동일한 값을 더 넓게 분포시키고 있음을 확인할 수 있다
 *IQR = Q3-Q1 : 즉, 25%~75%의 값들을 다룬다

#결론적으로 모든 스케일러 처리전에는 아웃라이어 제거가 선행되어야 한다.
또한, 데이터의 분포특징에 따라 적절한 스케일러를 적용해주는 것이 좋다
#4가지 방법은 각 피처(feature)의 통계치를 이용=> 즉, 열(columns)를 대상으로 함


---------------------------------------------------------------------------------
2. Normalizer
-각 변수의 값을 원점으로부터 1만큼 떨어져 있는 범위내로 변환
-빠르게 학습할 수 있고, 과대적합 확률을 낮출 수 있음
-Normalizer 의 경우 각 행(row)마다 정규화가 진행
이는 한 행의 모든 피처들 사이의 유클리드 거리가 1이 되도록 데이터값을 만들어 줌
이렇게 하면 좀 더 빠르게 학습할 수 있고 과대적합 확률을 낮출 수 있다고 함

#라벨인코딩/원핫인코딩/겟더미/정규화&표준화 참고 블로그 
https://jominseoo.tistory.com/m/28
